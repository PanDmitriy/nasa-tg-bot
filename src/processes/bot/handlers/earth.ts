import { Context, Markup } from 'telegraf';
import { BotContext } from '../types';
import { EarthApi } from '../../../features/earth/api';

const earthApi = new EarthApi();

export async function handleEarth(ctx: Context & BotContext) {
  try {
    await ctx.sendChatAction('upload_photo');
    const loading = await ctx.reply('‚è≥ –ó–∞–≥—Ä—É–∂–∞—é —Å–Ω–∏–º–æ–∫‚Ä¶');
    const image = await earthApi.getLatestEarthImage();
    
    await ctx.replyWithPhoto(image.image, {
      caption: `üåç <b>–°–Ω–∏–º–æ–∫ –ó–µ–º–ª–∏</b>\n\n` +
        `üìÖ <i>${new Date(image.date).toLocaleString('ru-RU')}</i>\n\n` +
        `${image.caption}\n\n` +
        `üì∏ <i>NASA Earth Polychromatic Imaging Camera (EPIC)</i>`,
      parse_mode: 'HTML'
    });
    try { await ctx.deleteMessage(loading.message_id); } catch {}
  } catch (error) {
    console.error('Earth Error:', error);
    const msg = error instanceof Error ? error.message : String(error);
    if (msg.includes('NASA API Error: 503') || msg.includes('NASA API Error: 502') || msg.includes('NASA API Error: 504')) {
      await ctx.reply('‚ö†Ô∏è –°–µ—Ä–≤–∏—Å NASA EPIC –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (5xx). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', Markup.inlineKeyboard([
        Markup.button.callback('üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å', 'earth_retry')
      ]));
      return;
    }
    if (msg.includes('NASA API Error: 429')) {
      await ctx.reply('‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ NASA (429). –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ.', Markup.inlineKeyboard([
        Markup.button.callback('üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å', 'earth_retry')
      ]));
      return;
    }
    await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–Ω–∏–º–∫–∞ –ó–µ–º–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', Markup.inlineKeyboard([
      Markup.button.callback('üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å', 'earth_retry')
    ]));
  }
} 

export async function handleEarthRetry(ctx: Context & BotContext) {
  try { await ctx.answerCbQuery(); } catch {}
  try { await ctx.deleteMessage(); } catch {}
  return handleEarth(ctx);
}