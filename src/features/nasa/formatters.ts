import { config } from '../../app/config';

interface EPICImage {
  date: string;
  image: string;
  lat?: number;
  lon?: number;
}

interface Asteroid {
  name: string;
  estimated_diameter: {
    kilometers: {
      estimated_diameter_min: number;
      estimated_diameter_max: number;
    };
  };
  close_approach_data: Array<{
    close_approach_date: string;
    miss_distance: {
      kilometers: string;
    };
    relative_velocity: {
      kilometers_per_hour: string;
    };
  }>;
  is_potentially_hazardous_asteroid: boolean;
  nasa_jpl_url: string;
}

export const formatters = {
  formatDate(date: Date): string {
    return date.toLocaleString('ru-RU', {
      timeZone: config.timezone,
      ...config.dateFormat
    });
  },

  formatEarthMessage(image: EPICImage): string {
    return `üåç *–°–Ω–∏–º–æ–∫ –ó–µ–º–ª–∏ –∏–∑ –∫–æ—Å–º–æ—Å–∞*\n\n` +
      `üìÖ –î–∞—Ç–∞: ${this.formatDate(new Date(image.date))}\n` +
      `üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å—ä–µ–º–∫–∏:\n` +
      `–®–∏—Ä–æ—Ç–∞: ${image.lat?.toFixed(2) || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}¬∞\n` +
      `–î–æ–ª–≥–æ—Ç–∞: ${image.lon?.toFixed(2) || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}¬∞\n\n` +
      `üõ∞Ô∏è –°–Ω—è—Ç–æ —Å –∫–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ –∞–ø–ø–∞—Ä–∞—Ç–∞ DSCOVR`;
  },

  formatAsteroidMessage(asteroids: Asteroid[]): string {
    if (asteroids.length === 0) {
      return '–í –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ –∞—Å—Ç–µ—Ä–æ–∏–¥—ã –Ω–µ –±—É–¥—É—Ç –ø—Ä–æ–ª–µ—Ç–∞—Ç—å —Ä—è–¥–æ–º —Å –ó–µ–º–ª–µ–π.';
    }

    let message = 'üåç *–ë–ª–∏–∂–∞–π—à–∏–µ –∞—Å—Ç–µ—Ä–æ–∏–¥—ã*\n\n';
    
    asteroids.slice(0, 5).forEach((asteroid, index) => {
      const approach = asteroid.close_approach_data[0];
      const diameter = asteroid.estimated_diameter.kilometers;
      const avgDiameter = ((diameter.estimated_diameter_min + diameter.estimated_diameter_max) / 2).toFixed(2);
      
      message += `*–ê—Å—Ç–µ—Ä–æ–∏–¥ ${index + 1}: ${asteroid.name}*\n` +
        `üìÖ –î–∞—Ç–∞ —Å–±–ª–∏–∂–µ–Ω–∏—è: ${this.formatDate(new Date(approach.close_approach_date))}\n` +
        `üìè –î–∏–∞–º–µ—Ç—Ä: ~${avgDiameter} –∫–º\n` +
        `üöÄ –°–∫–æ—Ä–æ—Å—Ç—å: ${parseFloat(approach.relative_velocity.kilometers_per_hour).toFixed(2)} –∫–º/—á\n` +
        `üåç –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${parseFloat(approach.miss_distance.kilometers).toFixed(2)} –∫–º\n` +
        (asteroid.is_potentially_hazardous_asteroid ? '‚ö†Ô∏è *–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–µ–Ω!*\n' : '') +
        `üîó [–ü–æ–¥—Ä–æ–±–Ω–µ–µ](${asteroid.nasa_jpl_url})\n\n`;
    });

    if (asteroids.length > 5) {
      message += `_–ò –µ—â–µ ${asteroids.length - 5} –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤..._`;
    }

    return message;
  }
}; 